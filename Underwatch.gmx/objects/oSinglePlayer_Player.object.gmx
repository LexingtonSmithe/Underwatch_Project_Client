<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer_Walking</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oPlayer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ispeed = 0.15;
facingLeft = true;
spriteNumber = 0;

PlayerStats()

HP = MaxHP

SecondsSinceShot = 0;
TimeToDisplayHealth = 2;
Shot = 0;

var Gun = instance_create(x,y,oSinglePlayer_Gun);
Gun.Owner = self.id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage

//Damage
var Hit = instance_place(x,y,oBullet);

if instance_exists(Hit) {
    HP = HP - Hit.Damage;
    with Hit {
        instance_destroy()
    }

}

var Hurt = instance_place(x,y,oPermBullet);

if instance_exists(Hurt) {
    HP = HP - Hurt.Damage;
}

//Healing
var Heal = instance_place(x,y,oHealthPack)

if  instance_exists(Heal){
    if HP &lt; MaxHP {
        HP = HP + Heal.Ammount
        with(Heal) {
            instance_destroy()
        }
    }
}

//DIE
if HP &lt;= 0 {
    var Killer = "Grunt";
    var ScreenFill = instance_create(x,y,oSingleScreenFill);
    ScreenFill.Text = Killer;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Input and move

var spd = 3;
var hspd = (keyboard_check(ord('D')) - keyboard_check(ord('A')))*spd;
var vspd = (keyboard_check(ord('S')) - keyboard_check(ord('W')))*spd;

//Collisions
CollisionCheck(hspd,vspd);

// Angles
GetOrientationAndFace();

// Depth
depth = -y;

// Animations

switch Direction {
    case 1:
        sprite_index = ImageOne;
        image_xscale = 1;
        break;
    case 2:
        sprite_index = ImageTwo;
        image_xscale = 1;
        break;
    case 3:
        sprite_index = ImageThree;
        image_xscale = 1;
        break;
    case 4:
        sprite_index = ImageTwo;
        image_xscale = -1;
        break;
    case 5:
        sprite_index = ImageOne;
        image_xscale = -1;
        break;
    case 6:
        sprite_index = ImageFive;
        image_xscale = -1 ;
        break;
    case 7:
        sprite_index = ImageFour;
        image_xscale = 1;
        break;
    case 8:
        sprite_index = ImageFive;
        image_xscale = 1;
        break;
}

// Change the sprite to an integer from 1 - 5

var XScale = 0;
if image_xscale = 1 {
    XScale = 1;
} else {
    XScale = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// tell the server we are leaving the game world
room_goto(rm_Offline_Menu)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var DisplayName = Name;
HealthHud(sHealth_100,DisplayName)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
