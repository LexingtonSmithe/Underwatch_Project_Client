<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sStaff</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GunStats(20,0.3,0.5)
Firing = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Positioning and Actions

///GunPositionAndAngle

if instance_exists(Owner) {
    //Set the Angle
    //if the Owner faces the other direcion switch hands and reorient
    if Owner.Angle &gt; 90 &amp;&amp; Owner.Angle &lt; 270 {
        Angle = 160;
        image_yscale = -1;
        Flip = -20;
    } else {
        Angle = 20;
        image_yscale = 1;
        Flip = 20;
    }
    
    //Delcare the variables
    var Length = 10;
    var xx = Owner.x + lengthdir_x(Length,0 - Angle);
    var yy = Owner.y + lengthdir_y(Length,0 - Angle);
    var mx = point_direction(x,y,mouse_x,mouse_y);
    
    //Set depth based on which way the player is facing
    if Owner.Direction = 1 or Owner.Direction = 2 or Owner.Direction = 8 {
        depth = Owner.depth +1;
    } else {
        depth = Owner.depth -1;
    }
    // Set our position
    x = xx;
    y = yy;
    
    //Face the correct way
    image_angle = mx;
    
} else {
    // If our owner doesnt exists, destroy 
    instance_destroy();
    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shooting
var Len = 0;
var Dir = image_angle + Flip;

if mouse_check_button(mb_left) {
    
    if  Ammo &gt; 0  {
        Firing = true
    }
    
} else {
    Firing = false
}


if Ammo &lt;= 0 {
    Reloading = true;
    Firing = false
}

if Reloading = true {
    Ammo = 0;
    SecondsReloading = SecondsReloading + 1 / room_speed;
    
    if SecondsReloading &gt; SecondsUntilReloaded {
        Ammo = MaxAmmo;
        SecondsReloading = 0;
        Reloading = false;
    }
    
}

if Firing = true {

    if !instance_exists(oStaff_Laser) {
        var Laser = instance_create(x, y, oStaff_Laser);
        Laser.image_angle = image_angle;
    }    
    
    if !instance_exists(oStaffMuzzle) {
        var Bang = instance_create(x, y, oStaffMuzzle);
        Bang.image_angle = image_angle
    }
    
    Ammo = Ammo - 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>AmmoCounter()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Reloading = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
