<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSpawnLocation</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>oPlayerSpawn</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Killer = "";
SecondsToSpawn = 0;
RespawnTime = 5;
alarm[0] = 10;
drawRespawnTimer = false;
drawPrompt = false;

var Side = 1; // Attacking
if global.Team == Side {
    var Player = instance_create(x, y, oLocalPlayer);
    var LivingStatus = 1;
    Local_Player_Life_Change(LivingStatus);
    ds_grid_set(global.PlayerGrid,4 , 0, 1); // Local Player is Alive
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SpawnFloatingHealth

var calc = min(sprite_width*image_xscale,sprite_height*image_yscale);
var len = random(calc / 2);
var dir = random(359);
instance_create(x + lengthdir_x(len, dir), y + lengthdir_y(len, dir), oFloatingHealth);

alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.1;

if !instance_exists(oLocalPlayer) {

    SecondsToSpawn = SecondsToSpawn + 1 / room_speed
    drawRespawnTimer = true;
    drawPrompt = false;
    LivingStatus = 0; // Dead
    
    if SecondsToSpawn &gt; RespawnTime {
        var Player = instance_create(x, y, oLocalPlayer);
        LivingStatus = 1; // Alive
        Killer = "";
        SecondsToSpawn = 0;
        if instance_exists(oScreenFill) {
            with(oScreenFill) {
                instance_destroy();
            }
        }

    }
    // tell the server we died
    Local_Player_Life_Change(LivingStatus);
    
    ds_grid_set(global.PlayerGrid,4 , 0, LivingStatus);
    
} else {

    drawRespawnTimer = false;
    
    if instance_place(x,y,oLocalPlayer) {
        drawPrompt = true;
        if keyboard_check_pressed(ord('H')) {
            LivingStatus = 0; // Effectively Dead
            // Destroy the player in other players clients
            Local_Player_Life_Change(LivingStatus);
            // Return to player select
            room_goto(rm_PlayerSelect);
        }
    } else {
        drawPrompt = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx = global.displayWidth / 2;
var yy = 160;
var sy = global.displayHeight;

if drawRespawnTimer = true {
    draw_sprite(sSpawnTimer,ceil(SecondsToSpawn),xx,yy)
}   

if drawPrompt = true {
    draw_sprite(sSwitch,0,xx,sy - 128);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
