<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGloop_Walking_7</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>oPlayer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ispeed = 0.5;
facingLeft = true;

var Gun = instance_create(x,y,oOozer);
Gun.Owner = self.id;

MaxHP = 500;
HP = MaxHP;

SecondsToTrail = 0;
SecondsBetweenTrails = 0.09;

sangle = 1;
SScale = 0.3;

vspd = 0
hspd = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Input and move

var spd = 2;
hspd = (keyboard_check(ord('D')) - keyboard_check(ord('A')))*spd;
vspd = (keyboard_check(ord('S')) - keyboard_check(ord('W')))*spd;

//Move

CollisionCheck(hspd,vspd);

// Set the depth
depth = -y


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Angles

GetOrientationAndFace()

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animations


switch Direction {
    case 1:
        sprite_index = sGloop_Walking_1
        image_xscale = 1;
        sdir = 90;
        break;
    case 2:
        sprite_index = sGloop_Walking_2;
        image_xscale = 1;
        sdir = 135;
        break;
    case 3:
        sprite_index = sGloop_Walking_3;
        image_xscale = 1;
        var sdir = 180;
        break;
    case 4:
        sprite_index = sGloop_Walking_2;
        image_xscale = -1;
        sdir = 225;
        break;
    case 5:
        sprite_index = sGloop_Walking_1;
        image_xscale = -1;
        sdir = 270;
        break;
    case 6:
        sprite_index = sGloop_Walking_8;
        image_xscale = -1 ;
        sdir = 315;
        break;
    case 7:
        sprite_index = sGloop_Walking_7;
        image_xscale = 1;
        sdir = 0;
        break;
    case 8:
        sprite_index = sGloop_Walking_8;
        image_xscale = 1;
        sdir = 45;
        break;
}



if vspd = 0 &amp;&amp; hspd &gt; 0 {
    sangle = 1;
    SScale = 0.3;
} else if vspd &lt; 0 &amp;&amp; hspd &gt; 0 {
    sangle = 2;
    SScale = 0.6;
} else if vspd &lt; 0 &amp;&amp; hspd = 0 {
    sangle = 3;
    SScale = 1;
} else if vspd &lt; 0 &amp;&amp; hspd &lt; 0 {
    sangle = 4;
    SScale = 0.6;
} else if vspd = 0 &amp;&amp; hspd &lt; 0 {
    sangle = 5;
    SScale = 0.3;
} else if vspd &gt; 0 &amp;&amp; hspd &lt; 0 {
    sangle = 6;
    SScale = 0.6;
} else if vspd &gt; 0 &amp;&amp; hspd = 0 {
    sangle = 7;
    SScale = 1;
} else if vspd &gt; 0 &amp;&amp; hspd &gt; 0 {
    sangle = 8;
    SScale = 0.6;
} else if vspd = 0 &amp;&amp; hspd = 0 {
    sangle = 9;
    SScale = 0;
}
    
if sangle != 9 {
    SecondsToTrail += 1/room_speed
    var slen = 15;
    
    if SecondsToTrail &gt; SecondsBetweenTrails {
        var Slime = instance_create(x,y,oSlimeTrail);
        Slime.image_angle = (sangle*45)-45;
        Slime.image_yscale = SScale;;
        Slime.depth = depth -1;
        Slime.x = Slime.x + lengthdir_x(slen,270);
        Slime.y = Slime.y + lengthdir_y(slen,270);
        SecondsToTrail = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage

WhenShot(oFire,0.5);
// For now reset the HP 

if HP &lt;= 0 {
    HP = MaxHP;
}

//Keep it within limits
if HP &gt; MaxHP {
    HP = MaxHP;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debugging
draw_set_font(font_Pixel)
draw_set_alpha(0.8)
draw_set_colour(c_black)
draw_rectangle(0,0,180,80,0)
draw_set_alpha(1)
draw_set_halign(fa_left)
draw_text_colour(16, 0, "Player", c_white,  c_white,  c_white, c_white, .75)
draw_text_colour(16, 24, "vspd: " + string(vspd), c_white,  c_white,  c_white, c_white, .75)
draw_text_colour(16, 48, "hspd: " + string(hspd), c_white,  c_white,  c_white, c_white, .75)
draw_text_colour(16, 72, Direction, c_white,  c_white,  c_white, c_white, .75)
draw_text_colour(16, 96, sangle, c_white,  c_white,  c_white, c_white, .75)
draw_text_colour(16, 128, string(mouse_x) + "." + string(mouse_y), c_red,  c_red,  c_red, c_red, .75)






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD
HealthHud(sHealth_100,"Gloop")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(mouse_x,mouse_y,oTargetDummy)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
