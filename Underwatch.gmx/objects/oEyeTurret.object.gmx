<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEyeTurret</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Owner = "";
Lit = false;
active = false;
Target = noone;
Counter = 0;
MaxCounter = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir = direction;
var hspd = hspeed + 20;
var vspd = vspeed + 20;
var check_x = lengthdir_x(hspd,dir);
var check_y = lengthdir_y(vspd,dir); 
var wall = collision_line(x,y,x+check_x,y+check_y,oSolid,true,1);


if ( wall )&amp;&amp; active = false{
    speed = 0;
    active = true;
    
}

if active = true {
    Counter += 0.3 / room_speed
    if IHaveLineOfSightTo(oPlayer){
        var Range = 100;
        var look = instance_nearest(x,y,oPlayer);
        image_angle = point_direction(x,y,look.x,look.y);
        if distance_to_object(oPlayer) &lt; Range {
            Firing = true;
            Target = instance_nearest(x,y,oPlayer);
            var b = instance_create(Target.x,Target.y,oFlames);
            Counter += 1 / room_speed
        } else {
            Firing = false;
            Target = noone;
        }
    } else {
        Target = noone;
        Firing = false;
    }
}

if Counter &gt; MaxCounter {
    instance_destroy()
}


DestroyOutsideRoom();




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if Target != noone {
    draw_set_colour(c_red)
    var len = (sprite_width / 2) - 1
    var dir = image_angle
    draw_line_width(x + lengthdir_x(len,dir), y + lengthdir_y(len,dir), Target.x, Target.y, 3)
}
/*
if Firing = true {
    draw_set_colour(c_aqua);
    draw_set_alpha(Strength);
    //set starting point
    var AX = x;
    var AY = y;
    //get direcdtion to travel in
    var DX = Target.x - AX;
    var DY = Target.y - AY;
    //get speed
    var Distance = point_distance(0,0,DX,DY);
    
    if Distance &gt; 0 {
        //scale to a length of one
        DX /= Distance;
        DY /= Distance;
        //move ahead one pixel at a time
        for (Trace = 0; Trace &lt; Distance; Trace+=1) {
            // if it hits something it stops 
            if collision_point(AX,AY,oSolid,1,1) break
            if collision_point(AX,AY,OEnemyParent,1,1) break
            //move ahead
            AX += DX
            AY += DY
            
        }  
    //look i did a ray trace    
    draw_line_width(x,y,AX,AY,Width)
    instance_create(AX,AY,OFreezeRayEnd)
    
    }   
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
